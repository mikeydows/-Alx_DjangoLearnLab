"""
Django settings for LibraryProject project.

Generated by 'django-admin startproject' using Django 5.2.5.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""
import os
from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
# Use environment variable for production security
SECRET_KEY = os.environ.get('SECRET_KEY', 'django-insecure-nmlv_4e^)_%&3s9aqx(=w8v^nl@u*e04kp3p3!_)7+9t_vxa_q')

# SECURITY WARNING: don't run with debug turned on in production!
# DEBUG should be False in production environment
DEBUG = os.environ.get('DEBUG', 'True').lower() == 'true'

# Set allowed hosts for production - use environment variable in production
ALLOWED_HOSTS = os.environ.get('ALLOWED_HOSTS', 'localhost,127.0.0.1').split(',')


# Application definition

INSTALLED_APPS = [
    'bookshelf',
    'relationship_app',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'LibraryProject.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'relationship_app', 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'LibraryProject.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
        'OPTIONS': {
            'min_length': 8,  # Enforce minimum password length for security
        }
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = 'static/'
STATIC_ROOT = BASE_DIR / 'staticfiles'  # For production static file serving

# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# Authentication settings
LOGIN_REDIRECT_URL = '/books/'
AUTH_USER_MODEL = 'bookshelf.CustomUser'

# =============================================================================
# HTTPS AND SECURITY CONFIGURATION
# =============================================================================

# HTTPS Settings
# -----------------------------------------------------------------------------
# SECURE_SSL_REDIRECT: Redirect all HTTP requests to HTTPS
# Set to True in production environment using environment variable
SECURE_SSL_REDIRECT = os.environ.get('SECURE_SSL_REDIRECT', 'False').lower() == 'true'

# HTTP Strict Transport Security (HSTS)
# -----------------------------------------------------------------------------
# SECURE_HSTS_SECONDS: Time period for HSTS policy (1 year = 31536000 seconds)
# Enable in production only - once enabled, cannot be easily disabled
SECURE_HSTS_SECONDS = int(os.environ.get('SECURE_HSTS_SECONDS', '0'))

# SECURE_HSTS_INCLUDE_SUBDOMAINS: Apply HSTS to all subdomains
# Only enable if all subdomains are served over HTTPS
SECURE_HSTS_INCLUDE_SUBDOMAINS = os.environ.get('SECURE_HSTS_INCLUDE_SUBDOMAINS', 'False').lower() == 'true'

# SECURE_HSTS_PRELOAD: Allow inclusion in browser preload lists
# Only enable if you're sure you can maintain HTTPS forever
SECURE_HSTS_PRELOAD = os.environ.get('SECURE_HSTS_PRELOAD', 'False').lower() == 'true'

# Secure Cookies
# -----------------------------------------------------------------------------
# SESSION_COOKIE_SECURE: Only send session cookies over HTTPS
SESSION_COOKIE_SECURE = os.environ.get('SESSION_COOKIE_SECURE', 'False').lower() == 'true'

# CSRF_COOKIE_SECURE: Only send CSRF cookies over HTTPS
CSRF_COOKIE_SECURE = os.environ.get('CSRF_COOKIE_SECURE', 'False').lower() == 'true'

# Additional Security Headers
# -----------------------------------------------------------------------------
# X_FRAME_OPTIONS: Prevent clickjacking by denying framing
# Options: 'DENY' (no framing), 'SAMEORIGIN' (same origin only), 'ALLOW-FROM uri'
X_FRAME_OPTIONS = 'DENY'

# SECURE_CONTENT_TYPE_NOSNIFF: Prevent MIME type sniffing
SECURE_CONTENT_TYPE_NOSNIFF = True

# SECURE_BROWSER_XSS_FILTER: Enable browser's XSS filter
SECURE_BROWSER_XSS_FILTER = True

# Additional security settings (recommended for production)
# -----------------------------------------------------------------------------
# SECURE_REFERRER_POLICY: Control Referer header
SECURE_REFERRER_POLICY = 'strict-origin-when-cross-origin'

# Cookie settings for enhanced security
SESSION_COOKIE_HTTPONLY = True  # Prevent JavaScript access to session cookies
CSRF_COOKIE_HTTPONLY = True     # Prevent JavaScript access to CSRF cookies

# For production deployment, consider also setting:
# USE_X_FORWARDED_HOST = True    # If behind a proxy
# USE_X_FORWARDED_PORT = True    # If behind a proxy
# SECURE_PROXY_SSL_HEADER = ('HTTP_X_FORWARDED_PROTO', 'https')  # If behind a proxy

# Environment-specific settings
# -----------------------------------------------------------------------------
if DEBUG:
    # Development settings - less restrictive for testing
    SECURE_SSL_REDIRECT = False
    SESSION_COOKIE_SECURE = False
    CSRF_COOKIE_SECURE = False
    SECURE_HSTS_SECONDS = 0
else:
    # Production settings - enforce strict security
    SECURE_SSL_REDIRECT = True
    SESSION_COOKIE_SECURE = True
    CSRF_COOKIE_SECURE = True
    SECURE_HSTS_SECONDS = 31536000  # 1 year
    SECURE_HSTS_INCLUDE_SUBDOMAINS = True
    SECURE_HSTS_PRELOAD = True